{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FIND_BUTTON","FindMovie","giveMovie","_useState","useState","_useState2","_slicedToArray","text","setText","_useState3","_useState4","setMovie","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","hasError","setHasError","_useState9","_useState10","hasMovie","setHasMovie","_useState11","_useState12","buttonText","setButtonText","_Fragment","onSubmit","event","query","preventDefault","toLowerCase","fetch","concat","then","res","json","catch","Response","Error","data","newMovie","Title","Plot","imdbID","Poster","e","finally","htmlFor","type","id","value","onChange","target","placeholder","cn","disabled","onClick","App","setMovies","find","item","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98a73e80.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie?: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie?.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie?.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie?.description}\n        <br />\n        <a href={movie?.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import cn from 'classnames';\nimport React, { useState } from 'react';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\n// import { MovieData } from '../../types/MovieData';\n// import { ResponseError } from '../../types/ReponseError';\ntype Props = {\n  giveMovie: (movie: Movie) => void\n};\n\nconst FIND_BUTTON = 'Find';\nconst SEARCH_AGAIN_BUTTON = 'Search again';\n\nexport const FindMovie: React.FC<Props> = ({ giveMovie }) => {\n  const [text, setText] = useState('');\n  const [movie, setMovie] = useState<Movie>();\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [hasMovie, setHasMovie] = useState(false);\n  const [buttonText, setButtonText] = useState(FIND_BUTTON);\n\n  const handleText = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setText(event.target.value);\n    setHasError(false);\n  };\n\n  const handleFindButton = () => {\n    setIsLoading(true);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    getMovie(text.toLowerCase())\n      .then(data => {\n        if (data.Response === 'False') {\n          setHasError(true);\n        } else {\n          setHasError(false);\n          setHasMovie(true);\n          setButtonText(SEARCH_AGAIN_BUTTON);\n\n          const newMovie: Movie = {\n            title: data.Title,\n            description: data.Plot,\n            imdbId: data.imdbID,\n            imgUrl: data.Poster === 'N/A'\n              ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n              : data.Poster,\n            imdbUrl: '',\n          };\n\n          setMovie(newMovie);\n        }\n      })\n\n      .catch((e) => {\n        throw new Error(e);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const handleAddFilm = () => {\n    if (!movie) {\n      return;\n    }\n\n    giveMovie(movie);\n    setHasMovie(false);\n    setText('');\n    setButtonText(FIND_BUTTON);\n    setHasError(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              value={text}\n              onChange={handleText}\n              placeholder=\"Enter a title to search\"\n              className={cn('input', {\n                'is-danger': hasError,\n              })}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button', 'is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!text}\n              onClick={handleFindButton}\n            >\n              {buttonText}\n            </button>\n          </div>\n\n          {hasMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddFilm}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n\n        </div>\n      </form>\n\n      {hasMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=b564830d';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => {\n      return {\n        Response: 'False',\n        Error: 'unexpected error',\n      };\n    });\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleMovies = (movie: Movie) => {\n    const dublicates = movies.find(item => item.imdbId === movie.imdbId);\n\n    if (dublicates) {\n      return;\n    }\n\n    setMovies([\n      ...movies,\n      movie,\n    ]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie giveMovie={handleMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}